
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BIGINT COMMA COMMENT CREATE DELETE DIVIDE ELSE EQUAL FLOAT FOR FROM ID IF INSERT LPAREN MINUS NUMBER PLUS PRINT RPAREN SELECT STRING TABLE THEN TIMES WHERE WHILE\n    statement : select_statement\n    \n    select_statement : SELECT FROM\n    '
    
_lr_action_items = {'SELECT':([0,],[3,]),'$end':([1,2,4,],[0,-1,-2,]),'FROM':([3,],[4,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'select_statement':([0,],[2,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> select_statement','statement',1,'p_statement','parser_1.py',7),
  ('select_statement -> SELECT FROM','select_statement',2,'p_select_statement','parser_1.py',13),
]
